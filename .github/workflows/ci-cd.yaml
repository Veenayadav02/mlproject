on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Create and install dependencies in virtual environment
        run: |
          python -m venv venv
          venv/bin/pip install --upgrade pip
          venv/bin/pip install -r requirements.txt

      - name: Lint code with flake8
        run: |
          venv/bin/pip install flake8
          venv/bin/flake8 . --ignore=E501,E231

      - name: Lint code with pylint
        run: |
          venv/bin/pip install pylint
          venv/bin/flake8 --ignore=E501,E231 *.py
          venv/bin/pylint --disable=C0301,C0326 test_app.py

      - name: Run unit tests
        run: |
          venv/bin/python -m unittest --verbose --failfast

      - name: Build Docker image
        run: |
          docker build -t star02/my-ml-model:latest .

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Push Docker image to Docker Hub
        run: |
          docker push star02/my-ml-model:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'

    steps:
      - name: Deploy to EC2
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST '
            docker pull star02/my-ml-model:latest &&
            docker stop my-container || true &&
            docker rm my-container || true &&
            docker run -d -p 80:80 --name my-container star02/my-ml-model:latest
          '
